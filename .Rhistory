install.packages("pacman")
install.packages(c("assertthat", "cli", "colorspace", "digest", "ggplot2", "glue", "gtable", "lazyeval", "munsell", "pillar", "plyr", "R6", "Rcpp", "reshape2", "rlang", "scales", "stringi", "stringr", "tibble"))
install.packages("pacman")
install.packages("pacman")
install.packages("pacman")
install.packages("pacman")
require(pacman)
library(pacman)
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,
ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny,
stringr, tidyr)
1+1
example <- matrix(c(1,2,3,4,5,6,7,8)),nrow=4,ncol=2)
example <- matrix(c(1,2,3,4,5,6,7,8),nrow=4,ncol=2)
View(example)
example <- matrix(c(1,2,3,4,5,6,7,8),nrow=3,ncol=3)
example <- matrix(c(0,1,2,3,4,5,6,7,8),nrow=3,ncol=3)
example <- matrix(r(0,1,2,3,4,5,6,7,8),nrow=3,ncol=3)
example <- matrix(c(0,1,2,3,4,5,6,7,8),ncol=3,nrow=3)
example <- matrix(c(0,1,2;3,4,5;6,7,8),ncol=3,nrow=3)
example <- matrix(c(0,1,2,3,4,5,6,7,8),ncol=3,nrow=3)
example <- matrix(c(0,1,2,3,4,5,6,7,8),ncol=3,nrow=3)
> example2 <- matrix(c(0,1,2,3,4,5,6,7,8),nrow=3,ncol=3)
example2 <- matrix(c(0,1,2,3,4,5,6,7,8),nrow=3,ncol=3)
View(example2)
View(example2)
library(datasets)  # Load/unload base packages manually
head(iris)
plot(iris$Species)  # Categorical variable
install.packages(ctv)
install.packages("ctv")
ctv::install.views("Econometrics")
ctv::install.views("MachineLearning")
ctv::install.views("DifferentialEquations")
ctv::install.views("Databases")
ctv::install.views("Finance")
ctv::install.views("gR")
source("https://bioconductor.org/biocLite.R")
#how
if (!requireNamespace("BiocManager", quietly = TRUE))
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.10")
ctv::install.views("Distributions")
ctv::install.views("Environmetrics")
install.packages("devtools")
#open with lib function
library(ggplot2)
#unload by checking box or by
detach("package:ggplot2", unload = TRUE)
library("ggplot2", lib.loc="~/R/win-library/3.6")
#check R version
sessionInfo()
#info
help(package = "ggplot2")
#more info
browseVignettes("ggplot2")
help(package = "devtools")
install.packages("devtools")
install.packages("devtools")
help(package = "devtools")
#open with lib function
library(devtools)
install.packages("KernSmooth")
#open with lib function
library(KernSmooth)
# COMPLETE
rm(list=ls())
#Pollutant Mean Formula
dir <- '~/specdata'
pollutantmean <- function(directory,pollutant,id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of CSV files
setwd(directory)
#getwd()
files <- dir(directory)
#alldata <- do.call(rbind,lapply(files,read.csv))
x <- id
somedata <- do.call(rbind,lapply(files[x],read.csv))
#somedata #print to check
## 'pollutant' is a character vector of length 1 indicating the
## name of the pollutant for which we will calculate the mean;
## either 'sulfate' or 'nitrate'
#pollutant <- as.character(pollutant)
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
mean(somedata[[pollutant]],na.rm=TRUE)
}
pollutantmean(dir,'sulfate',5)
#q1
pollutantmean(dir,'sulfate',1:10)
#q2
pollutantmean(dir,'nitrate',70:72)
#q3
pollutantmean(dir,"nitrate",23)
complete <- function(directory,id=1:332){
## 'directory' is char vector length 1 for location
setwd(directory)
#getwd()
files <- dir(directory)
ids <- vector()
nobs <- vector()
#alldata <- do.call(rbind,lapply(files,read.csv))
for (x in id) {
somedata <- do.call(rbind,lapply(files[x],read.csv))
# id is integer for id numbers
## Return data frame of the form:
## id   nobs
## 1    117
## 2   1041
## ...
## where 'id' is ID# and 'nobs' is # complete cases
ids = c(ids,x)
nobs = c(nobs,sum(complete.cases(somedata)))
}
data.frame(id = ids, nobs = nobs)
}
complete(dir,c(2,4,8,10,12))
RNGversion("3.5.1")
set.seed(42)
cc <- complete(dir, 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
corr <- function(directory, threshold = 0) {
# Get full path of the specsdata folder
setwd(directory)
files <- dir(directory)
#Get observations and filter by threshold
observations <- complete(directory)
filtered_observations <- subset(observations,observations$nobs > threshold)
# Aux variables
file_list <- do.call(rbind,lapply(files,read.csv))
correlation <- vector()
# For each id in filtered observations:
for (i in filtered_observations$id) {
# Read the file,
file_dir <- paste(directory,file_list[i],sep="")
file_data <- read.csv(file_dir)
# remove NA,
file_data <- subset(file_data,complete.cases(file_data))
# and calculate the cor and accumulate it in the corellation vector.
correlation <- c(correlation,cor(file_data$nitrate,file_data$sulfate))
}
#Finally, return the vector
correlation
}
cr <- corr(dir)
setwd('~/Github/R2D2')
getwd()
complete(dir,c(2,4,8,10,12))
complete(dir,c(2,4,8,10,12))
source('complete.R')
# COMPLETE
rm(list=ls())
source('complete.R')
?source()
?source('complete.R')
#setwd('~/Github/R2D2')
#source('complete.R')
dir <- '~/specdata'
source('complete.R')
#setwd('~/Github/R2D2')
#source('complete.R')
dic <- '~/specdata'
rm(list=ls())
source('pollutantmean.R')
getwd()
setwd('~/Github/R2D2')
source('pollutantmean.R')
source('complete.R')
source('complete.R')
source('pollutantmean.R')
setwd('~/Github/R2D2')
rm(list=ls())
source('pollutantmean.R')
source('complete.R')
getwd()
setwd('~/Github/R2D2')
source('complete.R')
getwd()
#test bed
rm(list=ls())
source('pollutantmean.R')
getwd()
#test bed
rm(list=ls())
setwd('~/Github/R2D2')
getwd()
source('pollutantmean.R')
source('complete.R')
source('corr.R')
pollutantmeantest(dir,'nitrate',5)
#source('complete.R')
dir <- '~/specdata'
getwd()
pollutantmeantest(dir,'nitrate',5)
pollutantmean(dic,'sulfate',5)
pollutantmean(dir,'sulfate',5)
pollutantmean(dir,'sulfate',5)
#q1
pollutantmean(dir,'sulfate',1:10)
#q2
pollutantmean(dir,'nitrate',70:72)
#q3
pollutantmean(dir,"nitrate",23)
getwd()
source('pollutantmean.R')
setwd('~/Github/R2D2')
source('pollutantmean.R')
getwd()
source('complete.R')
getwd()
complete(dir,1:332)
setwd(directory)
#getwd()
files <- dir(directory)
complete(dir,1:332)
#source('complete.R')
dir <- '~/specdata'
#setwd(directory)
setwd(dir) #testing
files <- dir(directory)
complete(dir,1:332)
#getwd()
#files <- dir(directory)
files <- dir(dir)
complete(dir,1:332)
comp <- complete(dir,1:332)
cct <- comp[,2]>threshold
threshold = 0
cct <- comp[,2]>threshold
threshold = 40
cct <- comp[,2]>threshold
threshold = 400
cct <- comp[,2]>threshold
